{"ast":null,"code":"var _jsxFileName = \"/Users/idressbaguaei/Desktop/ET712-Project-2/src/index.js\";\n// src/index.js\n\n// Import core React libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// Import global styles\nimport './index.css';\n\n// Import the main App component\nimport App from './App';\n\n/**\n * This event listener ensures that the JavaScript runs\n * only after the HTML document has fully loaded.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Get the root element where the React app will mount\n  const rootElement = document.getElementById('root');\n\n  /**\n   * Check if the root element exists in the HTML file.\n   * This prevents runtime errors in case of a missing DOM node.\n   */\n  if (rootElement) {\n    // Create a React root and render the App inside StrictMode\n    const root = ReactDOM.createRoot(rootElement);\n    root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n  } else {\n    // Fallback error message if the #root div isn't found\n    console.error(\"Unable to find element with id 'root'. Make sure it exists in your HTML file.\");\n  }\n});","map":{"version":3,"names":["React","ReactDOM","App","jsxDEV","_jsxDEV","document","addEventListener","rootElement","getElementById","root","createRoot","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","console","error"],"sources":["/Users/idressbaguaei/Desktop/ET712-Project-2/src/index.js"],"sourcesContent":["// src/index.js\n\n// Import core React libraries\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\n\n// Import global styles\nimport './index.css';\n\n// Import the main App component\nimport App from './App';\n\n/**\n * This event listener ensures that the JavaScript runs\n * only after the HTML document has fully loaded.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Get the root element where the React app will mount\n  const rootElement = document.getElementById('root');\n  \n  /**\n   * Check if the root element exists in the HTML file.\n   * This prevents runtime errors in case of a missing DOM node.\n   */\n  if (rootElement) {\n    // Create a React root and render the App inside StrictMode\n    const root = ReactDOM.createRoot(rootElement);\n    root.render(\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    );\n  } else {\n    // Fallback error message if the #root div isn't found\n    console.error(\"Unable to find element with id 'root'. Make sure it exists in your HTML file.\");\n  }\n});\n"],"mappings":";AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;;AAEvC;AACA,OAAO,aAAa;;AAEpB;AACA,OAAOC,GAAG,MAAM,OAAO;;AAEvB;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIAC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,MAAM;EAClD;EACA,MAAMC,WAAW,GAAGF,QAAQ,CAACG,cAAc,CAAC,MAAM,CAAC;;EAEnD;AACF;AACA;AACA;EACE,IAAID,WAAW,EAAE;IACf;IACA,MAAME,IAAI,GAAGR,QAAQ,CAACS,UAAU,CAACH,WAAW,CAAC;IAC7CE,IAAI,CAACE,MAAM,cACTP,OAAA,CAACJ,KAAK,CAACY,UAAU;MAAAC,QAAA,eACfT,OAAA,CAACF,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS,CACpB,CAAC;EACH,CAAC,MAAM;IACL;IACAC,OAAO,CAACC,KAAK,CAAC,+EAA+E,CAAC;EAChG;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}